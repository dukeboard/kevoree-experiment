// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Trace.proto

package org.kevoree.experiment.trace;

public final class TraceMessages {
  private TraceMessages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Traces extends
      com.google.protobuf.GeneratedMessage {
    // Use Traces.newBuilder() to construct.
    private Traces() {
      initFields();
    }
    private Traces(boolean noInit) {}
    
    private static final Traces defaultInstance;
    public static Traces getDefaultInstance() {
      return defaultInstance;
    }
    
    public Traces getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kevoree.experiment.trace.TraceMessages.internal_static_org_kevoree_experiment_trace_Traces_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kevoree.experiment.trace.TraceMessages.internal_static_org_kevoree_experiment_trace_Traces_fieldAccessorTable;
    }
    
    // repeated .org.kevoree.experiment.trace.Trace trace = 1;
    public static final int TRACE_FIELD_NUMBER = 1;
    private java.util.List<org.kevoree.experiment.trace.TraceMessages.Trace> trace_ =
      java.util.Collections.emptyList();
    public java.util.List<org.kevoree.experiment.trace.TraceMessages.Trace> getTraceList() {
      return trace_;
    }
    public int getTraceCount() { return trace_.size(); }
    public org.kevoree.experiment.trace.TraceMessages.Trace getTrace(int index) {
      return trace_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (org.kevoree.experiment.trace.TraceMessages.Trace element : getTraceList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (org.kevoree.experiment.trace.TraceMessages.Trace element : getTraceList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (org.kevoree.experiment.trace.TraceMessages.Trace element : getTraceList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.kevoree.experiment.trace.TraceMessages.Traces parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kevoree.experiment.trace.TraceMessages.Traces parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kevoree.experiment.trace.TraceMessages.Traces parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kevoree.experiment.trace.TraceMessages.Traces parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kevoree.experiment.trace.TraceMessages.Traces parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kevoree.experiment.trace.TraceMessages.Traces parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kevoree.experiment.trace.TraceMessages.Traces parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kevoree.experiment.trace.TraceMessages.Traces parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kevoree.experiment.trace.TraceMessages.Traces parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kevoree.experiment.trace.TraceMessages.Traces parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kevoree.experiment.trace.TraceMessages.Traces prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.kevoree.experiment.trace.TraceMessages.Traces result;
      
      // Construct using org.kevoree.experiment.trace.TraceMessages.Traces.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.kevoree.experiment.trace.TraceMessages.Traces();
        return builder;
      }
      
      protected org.kevoree.experiment.trace.TraceMessages.Traces internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.kevoree.experiment.trace.TraceMessages.Traces();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kevoree.experiment.trace.TraceMessages.Traces.getDescriptor();
      }
      
      public org.kevoree.experiment.trace.TraceMessages.Traces getDefaultInstanceForType() {
        return org.kevoree.experiment.trace.TraceMessages.Traces.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.kevoree.experiment.trace.TraceMessages.Traces build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.kevoree.experiment.trace.TraceMessages.Traces buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.kevoree.experiment.trace.TraceMessages.Traces buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.trace_ != java.util.Collections.EMPTY_LIST) {
          result.trace_ =
            java.util.Collections.unmodifiableList(result.trace_);
        }
        org.kevoree.experiment.trace.TraceMessages.Traces returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kevoree.experiment.trace.TraceMessages.Traces) {
          return mergeFrom((org.kevoree.experiment.trace.TraceMessages.Traces)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.kevoree.experiment.trace.TraceMessages.Traces other) {
        if (other == org.kevoree.experiment.trace.TraceMessages.Traces.getDefaultInstance()) return this;
        if (!other.trace_.isEmpty()) {
          if (result.trace_.isEmpty()) {
            result.trace_ = new java.util.ArrayList<org.kevoree.experiment.trace.TraceMessages.Trace>();
          }
          result.trace_.addAll(other.trace_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              org.kevoree.experiment.trace.TraceMessages.Trace.Builder subBuilder = org.kevoree.experiment.trace.TraceMessages.Trace.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTrace(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .org.kevoree.experiment.trace.Trace trace = 1;
      public java.util.List<org.kevoree.experiment.trace.TraceMessages.Trace> getTraceList() {
        return java.util.Collections.unmodifiableList(result.trace_);
      }
      public int getTraceCount() {
        return result.getTraceCount();
      }
      public org.kevoree.experiment.trace.TraceMessages.Trace getTrace(int index) {
        return result.getTrace(index);
      }
      public Builder setTrace(int index, org.kevoree.experiment.trace.TraceMessages.Trace value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.trace_.set(index, value);
        return this;
      }
      public Builder setTrace(int index, org.kevoree.experiment.trace.TraceMessages.Trace.Builder builderForValue) {
        result.trace_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTrace(org.kevoree.experiment.trace.TraceMessages.Trace value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.trace_.isEmpty()) {
          result.trace_ = new java.util.ArrayList<org.kevoree.experiment.trace.TraceMessages.Trace>();
        }
        result.trace_.add(value);
        return this;
      }
      public Builder addTrace(org.kevoree.experiment.trace.TraceMessages.Trace.Builder builderForValue) {
        if (result.trace_.isEmpty()) {
          result.trace_ = new java.util.ArrayList<org.kevoree.experiment.trace.TraceMessages.Trace>();
        }
        result.trace_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTrace(
          java.lang.Iterable<? extends org.kevoree.experiment.trace.TraceMessages.Trace> values) {
        if (result.trace_.isEmpty()) {
          result.trace_ = new java.util.ArrayList<org.kevoree.experiment.trace.TraceMessages.Trace>();
        }
        super.addAll(values, result.trace_);
        return this;
      }
      public Builder clearTrace() {
        result.trace_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.kevoree.experiment.trace.Traces)
    }
    
    static {
      defaultInstance = new Traces(true);
      org.kevoree.experiment.trace.TraceMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.kevoree.experiment.trace.Traces)
  }
  
  public static final class Trace extends
      com.google.protobuf.GeneratedMessage {
    // Use Trace.newBuilder() to construct.
    private Trace() {
      initFields();
    }
    private Trace(boolean noInit) {}
    
    private static final Trace defaultInstance;
    public static Trace getDefaultInstance() {
      return defaultInstance;
    }
    
    public Trace getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.kevoree.experiment.trace.TraceMessages.internal_static_org_kevoree_experiment_trace_Trace_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.kevoree.experiment.trace.TraceMessages.internal_static_org_kevoree_experiment_trace_Trace_fieldAccessorTable;
    }
    
    // required string machine = 1;
    public static final int MACHINE_FIELD_NUMBER = 1;
    private boolean hasMachine;
    private java.lang.String machine_ = "";
    public boolean hasMachine() { return hasMachine; }
    public java.lang.String getMachine() { return machine_; }
    
    // required string clientId = 2;
    public static final int CLIENTID_FIELD_NUMBER = 2;
    private boolean hasClientId;
    private java.lang.String clientId_ = "";
    public boolean hasClientId() { return hasClientId; }
    public java.lang.String getClientId() { return clientId_; }
    
    // required int64 timestamp = 3;
    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private boolean hasTimestamp;
    private long timestamp_ = 0L;
    public boolean hasTimestamp() { return hasTimestamp; }
    public long getTimestamp() { return timestamp_; }
    
    // required string body = 4;
    public static final int BODY_FIELD_NUMBER = 4;
    private boolean hasBody;
    private java.lang.String body_ = "";
    public boolean hasBody() { return hasBody; }
    public java.lang.String getBody() { return body_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasMachine) return false;
      if (!hasClientId) return false;
      if (!hasTimestamp) return false;
      if (!hasBody) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasMachine()) {
        output.writeString(1, getMachine());
      }
      if (hasClientId()) {
        output.writeString(2, getClientId());
      }
      if (hasTimestamp()) {
        output.writeInt64(3, getTimestamp());
      }
      if (hasBody()) {
        output.writeString(4, getBody());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMachine()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getMachine());
      }
      if (hasClientId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getClientId());
      }
      if (hasTimestamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, getTimestamp());
      }
      if (hasBody()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getBody());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.kevoree.experiment.trace.TraceMessages.Trace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kevoree.experiment.trace.TraceMessages.Trace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kevoree.experiment.trace.TraceMessages.Trace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.kevoree.experiment.trace.TraceMessages.Trace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.kevoree.experiment.trace.TraceMessages.Trace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kevoree.experiment.trace.TraceMessages.Trace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.kevoree.experiment.trace.TraceMessages.Trace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kevoree.experiment.trace.TraceMessages.Trace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.kevoree.experiment.trace.TraceMessages.Trace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.kevoree.experiment.trace.TraceMessages.Trace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.kevoree.experiment.trace.TraceMessages.Trace prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.kevoree.experiment.trace.TraceMessages.Trace result;
      
      // Construct using org.kevoree.experiment.trace.TraceMessages.Trace.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.kevoree.experiment.trace.TraceMessages.Trace();
        return builder;
      }
      
      protected org.kevoree.experiment.trace.TraceMessages.Trace internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.kevoree.experiment.trace.TraceMessages.Trace();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.kevoree.experiment.trace.TraceMessages.Trace.getDescriptor();
      }
      
      public org.kevoree.experiment.trace.TraceMessages.Trace getDefaultInstanceForType() {
        return org.kevoree.experiment.trace.TraceMessages.Trace.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.kevoree.experiment.trace.TraceMessages.Trace build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.kevoree.experiment.trace.TraceMessages.Trace buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.kevoree.experiment.trace.TraceMessages.Trace buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.kevoree.experiment.trace.TraceMessages.Trace returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.kevoree.experiment.trace.TraceMessages.Trace) {
          return mergeFrom((org.kevoree.experiment.trace.TraceMessages.Trace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.kevoree.experiment.trace.TraceMessages.Trace other) {
        if (other == org.kevoree.experiment.trace.TraceMessages.Trace.getDefaultInstance()) return this;
        if (other.hasMachine()) {
          setMachine(other.getMachine());
        }
        if (other.hasClientId()) {
          setClientId(other.getClientId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasBody()) {
          setBody(other.getBody());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setMachine(input.readString());
              break;
            }
            case 18: {
              setClientId(input.readString());
              break;
            }
            case 24: {
              setTimestamp(input.readInt64());
              break;
            }
            case 34: {
              setBody(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string machine = 1;
      public boolean hasMachine() {
        return result.hasMachine();
      }
      public java.lang.String getMachine() {
        return result.getMachine();
      }
      public Builder setMachine(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMachine = true;
        result.machine_ = value;
        return this;
      }
      public Builder clearMachine() {
        result.hasMachine = false;
        result.machine_ = getDefaultInstance().getMachine();
        return this;
      }
      
      // required string clientId = 2;
      public boolean hasClientId() {
        return result.hasClientId();
      }
      public java.lang.String getClientId() {
        return result.getClientId();
      }
      public Builder setClientId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder clearClientId() {
        result.hasClientId = false;
        result.clientId_ = getDefaultInstance().getClientId();
        return this;
      }
      
      // required int64 timestamp = 3;
      public boolean hasTimestamp() {
        return result.hasTimestamp();
      }
      public long getTimestamp() {
        return result.getTimestamp();
      }
      public Builder setTimestamp(long value) {
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder clearTimestamp() {
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
      
      // required string body = 4;
      public boolean hasBody() {
        return result.hasBody();
      }
      public java.lang.String getBody() {
        return result.getBody();
      }
      public Builder setBody(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder clearBody() {
        result.hasBody = false;
        result.body_ = getDefaultInstance().getBody();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:org.kevoree.experiment.trace.Trace)
    }
    
    static {
      defaultInstance = new Trace(true);
      org.kevoree.experiment.trace.TraceMessages.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:org.kevoree.experiment.trace.Trace)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kevoree_experiment_trace_Traces_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kevoree_experiment_trace_Traces_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_kevoree_experiment_trace_Trace_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_kevoree_experiment_trace_Trace_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013Trace.proto\022\034org.kevoree.experiment.tr" +
      "ace\"<\n\006Traces\0222\n\005trace\030\001 \003(\0132#.org.kevor" +
      "ee.experiment.trace.Trace\"K\n\005Trace\022\017\n\007ma" +
      "chine\030\001 \002(\t\022\020\n\010clientId\030\002 \002(\t\022\021\n\ttimesta" +
      "mp\030\003 \002(\003\022\014\n\004body\030\004 \002(\tB\017B\rTraceMessages"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_kevoree_experiment_trace_Traces_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_kevoree_experiment_trace_Traces_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_kevoree_experiment_trace_Traces_descriptor,
              new java.lang.String[] { "Trace", },
              org.kevoree.experiment.trace.TraceMessages.Traces.class,
              org.kevoree.experiment.trace.TraceMessages.Traces.Builder.class);
          internal_static_org_kevoree_experiment_trace_Trace_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_kevoree_experiment_trace_Trace_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_kevoree_experiment_trace_Trace_descriptor,
              new java.lang.String[] { "Machine", "ClientId", "Timestamp", "Body", },
              org.kevoree.experiment.trace.TraceMessages.Trace.class,
              org.kevoree.experiment.trace.TraceMessages.Trace.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
