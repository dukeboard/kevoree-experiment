
/*
 * Ecample of an NP-complete problem: the n-queen problem
 *
 * Find the positions of n queens on a checkboard of size n such
 * that no queen can capture another one. In other words, for each
 * queen on the checkboard there is no other queen on the same line,
 * or the same column, or the same diagonal.
 *
 *  In this program, we consider one queen by line (so no conflict on
 *  one line). Queens are represented by pairs l:c where l is her line
 *  and c her vertical position (column).
 *
 */
 
package fr.inria.fr.inria.hocl.tests.queensEight;
 
let eightQueens = replace-one <1:c1::int, 2:c2::int, 3:c3::int, 4:c4::int,
                               5:c5::int, 6:c6::int, 7:c7::int, 8:c8::int,  ?w>
                          by 1:c1, 2:c2, 3:c3, 4:c4, 5:c5, 6:c6, 7:c7, 8:c8
                          if    Queens.noConflict(1,c1,2,c2)
                             && Queens.noConflict(1,c1,3,c3)
                             && Queens.noConflict(1,c1,4,c4)
                             && Queens.noConflict(1,c1,5,c5)
                             && Queens.noConflict(1,c1,6,c6)
                             && Queens.noConflict(1,c1,7,c7)
                             && Queens.noConflict(1,c1,8,c8)
                             && Queens.noConflict(2,c2,3,c3)
                             && Queens.noConflict(2,c2,4,c4)
                             && Queens.noConflict(2,c2,5,c5)
                             && Queens.noConflict(2,c2,6,c6)
                             && Queens.noConflict(2,c2,7,c7)
                             && Queens.noConflict(2,c2,8,c8)
                             && Queens.noConflict(3,c3,4,c4)
                             && Queens.noConflict(3,c3,5,c5)
                             && Queens.noConflict(3,c3,6,c6)
                             && Queens.noConflict(3,c3,7,c7)
                             && Queens.noConflict(3,c3,8,c8)
                             && Queens.noConflict(4,c4,5,c5)
                             && Queens.noConflict(4,c4,6,c6)
                             && Queens.noConflict(4,c4,7,c7)
                             && Queens.noConflict(4,c4,8,c8)
                             && Queens.noConflict(5,c5,6,c6)
                             && Queens.noConflict(5,c5,7,c7)
                             && Queens.noConflict(5,c5,8,c8)
                             && Queens.noConflict(6,c6,7,c7)
                             && Queens.noConflict(6,c6,8,c8)
                             && Queens.noConflict(7,c7,8,c8)                             
in
<
 eightQueens,
 <1:1, 1:2, 1:3, 1:4, 1:5, 1:6, 1:7, 1:8,
  2:1, 2:2, 2:3, 2:4, 2:5, 2:6, 2:7, 2:8,
  3:1, 3:2, 3:3, 3:4, 3:5, 3:6, 3:7, 3:8,
  4:1, 4:2, 4:3, 4:4, 4:5, 4:6, 4:7, 4:8,
  5:1, 5:2, 5:3, 5:4, 5:5, 5:6, 5:7, 5:8,
  6:1, 6:2, 6:3, 6:4, 6:5, 6:6, 6:7, 6:8,
  7:1, 7:2, 7:3, 7:4, 7:5, 7:6, 7:7, 7:8,
  8:1, 8:2, 8:3, 8:4, 8:5, 8:6, 8:7, 8:8>
>

