package org.kevoree.library.hocl;

import org.kevoree.*;

let balance =
   replace "NODE":"Node_Id":id1::String:"Num":num1::int:<?w1, s::String>,
           "NODE":"Node_Id":id2::String:"Num":num2::int:<?w2>
    by  "NODE":"Node_Id":id1:"Num":(num1-1):<w1>,
        "NODE":"Node_Id":id2:"Num":(num2+1):<w2, s>
   if num1 - num2 >= 2
in

let bind =
	replace "CHANNEL":"Channel_Id":channelId::String:<?w1, c1::String:c1Port::String:c1Type::String>,
			"COMPONENT":component::ComponentInstance
	by	"CHANNEL":"Channel_Id":channelId:<w1, c1:c1Port:c1Type, component.getName():c1Port:component.getTypeDefinition().getName()>,
	    "COMPONENT":component
	if (c1Type.equals(component.getTypeDefinition().getName()) && !component.getName().equals(c1))
in

let addComponent =
   replace "ADD_COMPONENT":component::ComponentInstance:"Node_Id":nodeId::String,
           "NODE":"Node_Id":id::String:"Num":num::int:<?l>
    by    "NODE":"Node_Id":id:"Num":(num+1):<l,component.getName()>,
         "COMPONENT":component
    if (nodeId.equals(id))
in

let removeComponent =
    replace "DELETE_COMPONENT":node_id::String:component_id::String,
           "NODE":"Node_Id":id::String:"Num":num::int:<s::String, ?w>
    by  "NODE":"Node_Id":id:"Num":num:<w>
    if (s.equals(component_id) && node_id.equals(id))
in

let addNode =
    replace "ADD_NODE":node::ContainerNode
    by  "NODE":"Node_Id":node.getName():"Num":0:<>
in

let removeNode =
    replace "DELETE_NODE":node::ContainerNode,
           "NODE":"Node_Id":id::String:"Num":num::int:<?w>,
           ?l
    by  l
   if (node.getName().equals(id))
in


let addChannel =
    replace "ADD_CHANNEL":channel::Channel
    by    "CHANNEL":"Channel_Id":channel.getName():<>
in

let removeChannel =
    replace "DELETE_CHANNEL":channel::Channel,
           "CHANNEL":"Channel_Id":id::String:<?w>,
           ?l
   by  l
   if (channel.getName().equals(id))
in

let addBinding =
    replace "ADD_BINDING":mBinding::MBinding,
            "CHANNEL":"Channel_Id":channelId::String:<?w1>
    by      "CHANNEL":"Channel_Id":channelId:<w1,
                ((ComponentInstance)mBinding.getPort().eContainer()).getName():mBinding.getPort().getPortTypeRef().getName():((ComponentInstance)mBinding.getPort().eContainer()).getTypeDefinition().getName()>
    if (mBinding.getHub().getName().equals(channelId))
in

let removeBinding =
    replace "REMOVE_BINDING":mBinding::MBinding,
            "CHANNEL":"Channel_Id":channelId::String:<?w1, c1::String:c1Port::String:c1Type::String>
    by      "CHANNEL":"Channel_Id":channelId:<w1>
    if (mBinding.getHub().getName().equals(channelId)
            && ((ComponentInstance)mBinding.getPort().eContainer()).getName().equals(c1)
            && mBinding.getPort().getPortTypeRef().getName().equals(c1Port)
            && ((ComponentInstance)mBinding.getPort().eContainer()).getTypeDefinition().getName().equals(c1Type))
in
<
   balance, bind, addComponent, removeComponent, addNode, removeNode, addChannel, removeChannel, addBinding, removeBinding
>